# Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: psql-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/postgres/data"
---
# volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: psql-volume-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Service
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f /home/anylog/docker-compose/docker-compose-update.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgres
status:
  loadBalancer: {}

---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f /home/anylog/docker-compose/docker-compose-update.yml
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: database
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: database
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f /home/anylog/docker-compose/docker-compose-update.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/frontend: "true"
        io.kompose.service: database
    spec:
      volumes:
        - name: psql-volume
          persistentVolumeClaim:
            claimName: psql-volume-claim
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: passwd
            - name: POSTGRES_USER
              value: admin
          image: postgres:14.0-alpine
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: psql-volume
      restartPolicy: Always
status: {}
