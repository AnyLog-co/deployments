# Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/grafana/data"
---
# Volume Clam
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-volume-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resource:
    requests:
      storage 1Gi

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: ClusterIP
  ports:
    - port: 3000
  selector:
    app: grafana

---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
sepc:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
      - name: grafana-volume
        persistentVolumeClaim:
          claimName: grafana-volume-claim
      containers:
        - name: grafana
          image:grafana/grafana:7.5.7
          imagePullPolicy: IfNotPresent
          env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "false"
            - name: GF_INSTALL_PLUGINS
              value: simpod-json-datasource,grafana-worldmap-panel
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "true"
            - name: GRAFANA_ADMIN_PASSWORD
              value: passwd
            - name: GRAFANA_ADMIN_USER
              value: admin
          ports:
            - containerPort: 3000
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-volume
