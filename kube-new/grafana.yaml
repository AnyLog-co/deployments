# Based On: https://medium.com/@suyashmohan/setting-up-postgresql-database-on-kubernetes-24a2a192e962
apiVersion: v1
kind: ConfigMap
metadata:
<<<<<<< HEAD
  name: postgres-configuration
  labels:
    app: postgres
data:
  POSTGRES_USER: admin
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-configs
  labels:
    app: postgres
data:
  POSTGRES_PASSWORD: cGFzc3dkCg== # passwd
=======
  name: grafana-configuration
  labels:
    app: grafana
data:
  GRAFANA_ADMIN_USER: admin
  GRAFANA_ADMIN_PASSWORD: admin
  GF_AUTH_DISABLE_LOGIN_FORM: "false"
  GF_AUTH_ANONYMOUS_ENABLED: "true"
  GF_SECURITY_ALLOW_EMBEDDING: "true"
  GF_INSTALL_PLUGINS: simpod-json-datasource,grafana-worldmap-panel
>>>>>>> 02e4c5c95a09ee32a849213ebbd752f054777c4b
---
apiVersion: v1
kind: Service
metadata:
<<<<<<< HEAD
  name: postgres-service
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  selector:
    app: postgres
=======
  name: grafana
  labels:
    app: grafana
spec:
  ports:
  - port: 3000
    name: grafana
  selector:
    app: grafana
>>>>>>> 02e4c5c95a09ee32a849213ebbd752f054777c4b
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
<<<<<<< HEAD
  name: postgres-statefulset
  labels:
    app: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:14.0-alpine
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: postgres-configuration
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-configs
              key: POSTGRES_PASSWORD
        ports:
        - containerPort: 5432
          name: postgresdb
        volumeMounts:
        - name: postgres-pv-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-pv-data
        persistentVolumeClaim:
          claimName: postgres-pv-claim
=======
  name: grafana
  labels:
    app: grafana
spec:
  serviceName: "grafana"
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:7.5.7
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: grafana-configuration
        ports:
        - containerPort: 3000
          name: grafana
# volumes return error: Back-off restarting failed container
#        volumeMounts:
#        - name: grafana-pv-data
#          mountPath: /var/lib/grafana
#      volumes:
#      - name: grafana-pv-data
#        persistentVolumeClaim:
#          claimName: postgres-pv-claim
>>>>>>> 02e4c5c95a09ee32a849213ebbd752f054777c4b
