# service
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  ports:
    - name: "grafana"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: grafana
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy: {}
  template:
    metadata:
      labels:
        io.kompose.network/frontend: "true"
        io.kompose.service: grafana
    spec:
#      volumes:
#        - name: grafana-data
#          hostPath:
#            path: /mnt/grafana-data  # my machine
      containers:
        - env:
            - name: GRAFANA_ADMIN_USER
              value: admin
            - name: GRAFANA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-configs
                  key: GRAFANA_PASSWORD
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "false"
            - name: GF_INSTALL_PLUGINS
              value: simpod-json-datasource,grafana-worldmap-panel
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "true"
          image: grafana/grafana:7.5.7
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
#          volumeMounts: # inside the container
#            - name: grafana-data
#              mountPath: /var/lib/grafana
          stdin: true
          tty: true
      restartPolicy: Always

status: {}

