#----------------------------------------------------------------------------------------------------------------------
# The following are the general values used to deploy an AnyLog instance of type: Master | AnyLog version: develop
# required configs:
# - node_type
# - node_name
# - company_name
# - anylog_server_port
# - anylog_rest_port
# - master_node TCP connection information (for master you could use 127.0.0.1:32048)
#----------------------------------------------------------------------------------------------------------------------
general:
  name: publisher
  replicas: 1

image:
  set_secret: true
  secretName: imagepullsecret
  name: anylogco/anylog-network
  version: test
  pullPolicy: IfNotPresent

configs:
  basic:
    node_type: "publisher"
    node_name: "anylog-publisher"
    company: "new company"
  networking:
    services:
      anylog_server_port: 32248
      anylog_rest_port: 32249
      # OPTIONAL - MQTT message broker on AnyLog node
      anylog_broker_port: ""
    network_ips:
      external_ip: ""
      local_ip: ""
    settings:
      # OPTIONAL - whether to enable local MQTT message broker or not
      enable_broker: "false"
      # TCP connection information for master node (not needed for REST node)
      master_node: "127.0.0.1:32048"
      # How often a node syncs with the master node
      sync_time: "30 second"
  dbms:
    type: "psql"
    ip: "postgres"
    user: "admin"
    passwd: "demo"
    port: 5432
    # when memory is set to true, then the system_query database will automatically run using SQLite in memory.
    memory: "true"
  publisher:
    # run publisher where compress_json=!compress_json and move_json=!move_json and master_node=!master_node and dbms_name=!dbms_file_location and table_name=!table_file_location
    compress_json: "true"
    move_json: "true"
    # sample file name: [db_name].[table_name].0.0.json
    dbms_file_location: "file_name[0]"
    table_file_location: "file_name[1]"
  mqtt:
    # whether to enable an MQTT client on the node
    enable: "true"
    # add topic params (must be false if not configured)
    enable_topic: "true"
    broker: "driver.cloudmqtt.com"
    port: 18785
    log: "false"
    user: "ibglowct"
    password: "MSY4e009J7ts"
    topic:
      name: "anylogedgex"
      db_name: "test"
      # original value was "bring [device]" (Random-Integer-Generator01). howerver, due to a PSQL table name limit size is 65 chars, it's manually changeds to: rand_int
      table: "rand_data"
      timestamp_column: "now"
      value_column_type: "float"
      value_column: "bring [readings][][value]"
  other:
    # whether to deploy a local script that extends the default startup script
    deploy_local_script: "false"
  settings:
    # An optional parameter for the number of workers threads that process requests which are send to the provided IP and Port.
    tcp_thread_pool: 6
    # Amount of time (in seconds) until REST timeout
    rest_timeout: 30
    # The number of concurrent threads supporting HTTP requests.
    rest_threads: 5
    # Sets the number of threads supporting queries (the default is 3).
    query_pool: 3

    # The time threshold to flush the streaming data
    threshold_time: "60 seconds"
    # The accumulated data volume that calls the data flush process
    threshold_volume: "10KB"
    # Local database is immediate (independent of the calls to flush)
    write_immediate: true

