metadata: 
  # Kubernetes Instance namespace [Default: default]
  namespace: default
  # hostname for deployment [Default: anylog-operator]
  hostname: anylog-operator
  # deployment application name [Default: anylog-operator-app]
  app_name: anylog-operator-app
  # Pod application name [Default: anylog-operator-pod]
  pod_name: anylog-operator-pod
  # Kubernetes deployment name [Default: anylog-node-deployment]
  deployment_name: anylog-node-deployment
  # Kubernetes service name [Default: anylog-operator-service]
  service_name: anylog-operator-service
  # Kubernetes configuration mapping name [Default: anylog-operator-configmap]
  configmap_name: anylog-operator-configmap
  # Allows running Kubernetes remotely. If commented out, code will ignore it
  node_selector: ""
  # Number of Kubernetes replicas [Default: 1]
  replicas: 1

image: 
  # Image secret naming [Default: imagepullsecret]
  secret_name: imagepullsecret
  # (Docker Hub) Image Path [Default: anylogco/anylog-network]
  repository: anylogco/anylog-network
  # Image version [Default: test]
  tag: test
  # Image pulling policy [Default: IfNotPresent]
  pull_policy: IfNotPresent

volume: 
  # Whether or not to enable volumes for AnyLog [Default: true]
  enable_volume: true
  anylog_volume:
    # AnyLog Volume name[Default: anylog-operator-anylog-data]
    name: anylog-operator-anylog-data
    # AnyLog security directory path[Default: /app/AnyLog-Network/anylog]
    path: /app/AnyLog-Network/anylog
    # Volume access mode[Default: ReadWriteOnce]
    access_mode: ReadWriteOnce
    # Volume storage size[Default: 1Gi]
    storage_size: 1Gi
  blockchain_volume:
    # AnyLog Volume name[Default: anylog-operator-blockchain-data]
    name: anylog-operator-blockchain-data
    # AnyLog security directory path[Default: /app/AnyLog-Network/blockchain]
    path: /app/AnyLog-Network/blockchain
    # Volume access mode[Default: ReadWriteOnce]
    access_mode: ReadWriteOnce
    # Volume storage size[Default: 1Gi]
    storage_size: 1Gi
  data_volume:
    # AnyLog Volume name[Default: anylog-operator-data-data]
    name: anylog-operator-data-data
    # AnyLog security directory path[Default: /app/AnyLog-Network/data]
    path: /app/AnyLog-Network/data
    # Volume access mode[Default: ReadWriteOnce]
    access_mode: ReadWriteOnce
    # Volume storage size[Default: 1Gi]
    storage_size: 1Gi


general:

  # Information regarding which AnyLog node configurations to enable. By default, even if everything is disabled, AnyLog starts TCP and REST connection protocols [Default: operator]
  NODE_TYPE: operator
  # Name of the AnyLog instance [Default: anylog-operator]
  NODE_NAME: anylog-operator
  # Owner of the AnyLog instance [Default: New Company]
  COMPANY_NAME: New Company
  # Coordinates of the machine - used by Grafana to map the network [Default: 0.0, 0.0]
  LOCATION: 0.0, 0.0
  # Country where machine is located [Default: Unknown]
  COUNTRY: Unknown
  # State where machine is located [Default: Unknown]
  STATE: Unknown
  # City where machine is located [Default: Unknown]
  CITY: Unknown


authentication:

  # When using AnyLog authentication, nodes should have authentcation enabled once declared as a member on the blockchain [Default: false]
  ENABLE_AUTH: false
  # Whether or not to enable authentication when accessing node via REST [Default: false]
  ENABLE_REST_AUTH: false
  # Provide a password to protect sensitive information that is kept on the node
  NODE_PASSWORD: ""
  # user that can connect to this node [Default: user1]
  USER_NAME: user1
  # Password associated with the user
  USER_PASSWORD: ""
  # The type of user [Default: admin]
  USER_TYPE: admin
  # Password used by the ROOT member in authentication
  ROOT_PASSWORD: ""


networking:

  # Connect to TCP, REST and Message Broker (if configured) based on correlating node policy [Default: true]
  POLICY_BASED_NETWORKING: true
  # whether to setup networking based on a (generic) configuration policy - good for both REST and other nodes [Default: true]
  CONFIG_POLICY: true
  # Declare Policy name
  CONFIG_POLICY_NAME: ""
  # External IP address of the machine
  EXTERNAL_IP: ""
  # Local network IP address of the machine
  LOCAL_IP: ""
  # Kubernetes service name - used in stead of local IP on the blockchain if overlay IP is not declared [Default: anylog-node-svs]
  KUBERNETES_SERVICE_IP: anylog-operator-service
  # Overlay IP address - if set, will replace local IP address when connecting to network
  OVERLAY_IP: ""
  # Configurable (local) IP address that can be used when behind a proxy, or using Kubernetes for static IP
  PROXY_IP: ""
  # Port address used by AnyLog's TCP protocol to communicate with other nodes in the network [Default: 32148]
  ANYLOG_SERVER_PORT: 32148
  # Port address used by AnyLog's REST protocol [Default: 32149]
  ANYLOG_REST_PORT: 32149
  # Port value to be used as an MQTT broker, or some other third-party broker
  ANYLOG_BROKER_PORT: ""
  # A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs) [Default: true]
  TCP_BIND: true
  # The number of concurrent threads supporting HTTP requests.	 [Default: 6]
  TCP_THREADS: 6
  # A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs) [Default: false]
  REST_BIND: false
  # Timeout in seconds to determine a time interval such that if no response is being returned during the time interval, the system returns timeout error. [Default: 20]
  REST_TIMEOUT: 20
  # The number of concurrent threads supporting HTTP requests.	 [Default: 6]
  REST_THREADS: 6
  # Boolean value to determine if messages are send over HTTPS with client certificates. [Default: False]
  REST_SSL: False
  # A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs) [Default: false]
  BROKER_BIND: false
  # The number of concurrent threads supporting broker requests.	 [Default: 6]
  BROKER_THREADS: 6


database:

  # Physical database type [Default: sqlite]
  DB_TYPE: sqlite
  # Username for SQL database connection
  DB_USER: ""
  # Password correlated to database user
  DB_PASSWD: ""
  # Database IP address [Default: postgres-svs]
  DB_IP: postgres-svs
  # Database port number [Default: 5432]
  DB_PORT: 5432
  # Whether to set autocommit data [Default: false]
  AUTOCOMMIT: false
  # Whether to start to start system_query logical database [Default: false]
  SYSTEM_QUERY: false
  # Run system_query using in-memory SQLite. If set to false, will use pre-set database type [Default: true]
  MEMORY: False
  # Whether to enable NoSQL logical database [Default: false]
  NOSQL_ENABLE: false
  # Physical database type [Default: mongo]
  NOSQL_TYPE: mongo
  # Username for SQL database connection
  NOSQL_USER: ""
  # Password correlated to database user
  NOSQL_PASSWD: ""
  # Database IP address [Default: mongo-svs]
  NOSQL_IP: mongo-svs
  # Database port number [Default: 27017]
  NOSQL_PORT: 27017
  # Store blobs in database [Default: true]
  NOSQL_BLOBS_DBMS: true
  # Store blobs in folder [Default: true]
  NOSQL_BLOBS_FOLDER: true
  # Compress stored blobs [Default: false]
  NOSQL_BLOBS_COMPRESS: false
  # Whether (re)store a blob if already exists [Default: true]
  NOSQL_BLOBS_REUSE: true


blockchain:

  # TCP connection information for Master Node [Default: 127.0.0.1:32048]
  LEDGER_CONN: anylog-master-service:32048
  # How often to sync from blockchain [Default: 30 second]
  SYNC_TIME: 30 second
  # Source of where the data is coming from [Default: master]
  BLOCKCHAIN_SOURCE: master
  # Where will the copy of the blockchain be stored [Default: file]
  BLOCKCHAIN_DESTINATION: file


operator:

  # Operator ID
  MEMBER: ""
  # Owner of the cluster [Default: new-company-cluster]
  CLUSTER_NAME: new-company-cluster
  # Logical database name [Default: test]
  DEFAULT_DBMS: test
  # Whether of not to enable HA against the cluster [Default: false]
  ENABLE_HA: false
  # How many days back to sync between nodes [Default: 30]
  START_DATE: 30
  # Whether to enable partitioning [Default: false]
  ENABLE_PARTITIONS: false
  # Which tables to partition [Default: *]
  TABLE_NAME: "*"
  # Which timestamp column to partition by [Default: insert_timestamp]
  PARTITION_COLUMN: insert_timestamp
  # Time period to partition by [Default: 14 days]
  PARTITION_INTERVAL: 14 days
  # How many partitions to keep [Default: 6]
  PARTITION_KEEP: 6
  # How often to check if an old partition should be removed [Default: 1 day]
  PARTITION_SYNC: 1 day
  # Whether to create a new table in the operator [Default: true]
  CREATE_TABLE: true
  # Record data inserted on Operator [Default: true]
  UPDAE_TSD_INFO: true
  # Archive data coming in [Default: true]
  ARCHIVE: true
  # Compress JSON and SQL file(s) backup [Default: true]
  COMPRESS_FILE: true
  # How many threads to use in the operator process [Default: 1]
  OPERATOR_THREADS: 1


publisher:

  # Location of logical database name within file name [Default: 0]
  DBMS_FILE_LOCATION: 0
  # Location of table name within file name [Default: 1]
  TABLE_FILE_LOCATION: 1
  # Compress JSON and SQL file(s) backup [Default: true]
  PUBLISHER_COMPRESS_FILE: true


mqtt:

  # Whether to enable the default MQTT process [Default: false]
  ENABLE_MQTT: true
  # Whether to enable MQTT logging process [Default: false]
  MQTT_LOG: false
  # IP address of MQTT broker [Default: driver.cloudmqtt.com]
  MQTT_BROKER: driver.cloudmqtt.com
  # Port associated with MQTT broker [Default: 18785]
  MQTT_PORT: 18785
  # User associated with MQTT broker [Default: ibglowct]
  MQTT_USER: ibglowct
  # Password associated with MQTT user [Default: MSY4e009J7ts]
  MQTT_PASSWD: MSY4e009J7ts
  # Topic to get data for [Default: anylogedgex]
  MQTT_TOPIC: anylogedgex
  # Logical database name [Default: test]
  MQTT_DBMS: test
  # Table where to store data [Default: rand_data]
  MQTT_TABLE: rand_data
  # Timestamp column name [Default: now]
  MQTT_TIMESTAMP_COLUMN: now
  # Value column name [Default: bring [readings][][value]]
  MQTT_VALUE_COLUMN: bring [readings][][value]
  # Column value type [Default: float]
  MQTT_VALUE_COLUMN_TYPE: float


advanced_settings:

  # Whether to automatically run a local (or personalized) script at the end of the process [Default: false]
  DEPLOY_LOCAL_SCRIPT: false
  # Number of parallel queries [Default: 3]
  QUERY_POOL: 3
  # When data comes in write to database immidiately, as opposed to waiting for a full buffer [Default: true]
  WRITE_IMMEDIATE: true
  # If buffer is not full, how long to wait until pushing data through [Default: 60 seconds]
  THRESHOLD_TIME: 60 seconds
  # Buffer size to reach, at which point data is pushed through [Default: 10KB]
  THRESHOLD_VOLUME: 10KB

