#-----------------------------------------------------------------------------------------------------------------------
# The following are the general values used to deploy an AnyLog instance of type: Operator | AnyLog version: predevelop
#-----------------------------------------------------------------------------------------------------------------------
general:
 namespace: default
 app_name: anylog
 pod_name: anylog-operator-pod
 deployment_name: anylog-operator-app
 service_name: anylog-operator-svs
 configmap_name: anylog-operator-configs
 # nodeSelector - Allows running Kubernetes remotely. If commented out, code will ignore it
 #nodeSelector: ""
 replicas: 1

image:
 secretName: imagepullsecret
 repository: anylogco/anylog-network
 tag: predevelop
 pullPolicy: Always

volume:
  enable_volume: true
  anylog_volume_name: anylog-operator-node-anylog
  blockchain_volume_name: anylog-operator-node-blockchain
  data_volume_name: anylog-operator-node-data

configs:
 basic:
   node_type: operator
   node_name: anylog-operator-node
   company_name: New Company
   # if location is not set, will use `https://ipinfo.io/json` to get coordinates
   location: ""
   country: ""
   state: ""
   city: ""

 networking:
   server: 32148
   rest: 32149
   # Optional broker port
   broker: 32150
   # master node is not needed for REST node
   # Optional external & local IP instead of the default values
   external_ip: ""
   local_ip: ""
   # Proxy IP used by Nginx or other loadbalancer
   k8s_proxy_ip: 139.162.56.87

 authentication:
   enable: false
   type: ""
   user: ""
   password: ""

 blockchain:
   # The ledger conn is right now configured against our test / demo network - please update to utilize against your own network.
   ledger_conn: 45.79.74.39:32048
   sync_time: 30 seconds
   source: master
   destination: file

 database:
   type: psql
   ip: postgres-svs
   port: 5432
   user: admin
   password: demo
   # whether to have the node support system_query (ie querying data).
   deploy_system_query: true
   # whether to have system_query database to run against memory directly
   memory: true

 operator:
   # set member ID for operator - should only be used when readding operator to blockchain but keep (file) configs consistent
   member: ""
   cluster_name: new-cluster
   create_table: true
   update_tsd: true
   archive: true
   distributor: true
   db_name: test
   partition:
       enable: true
       table: "*"
       column: timestamp
       interval: 14 days
       keep: 6
       sync: 1 day

# MQTT configured against CloudMQTT broker to get random data from generated using EdgeX.
 mqtt:
   enable: true
   broker: driver.cloudmqtt.com
   port: 32150
#   user: ibglowct
#   password: MSY4e009J7ts
   log: false
   topic:
     name: anylogedgex
     db_name: test
     table: plc_device
     timestamp: now
     value_type: float
     value: bring [readings][][value]

 settings:
   # whether to deploy a local script that extends the default startup script
   deploy_local_script: false
   # An optional parameter for the number of workers threads that process requests which are send to the provided IP and Port.
   tcp_thread_pool: 6
   # Amount of time (in seconds) until REST timeout
   rest_timeout: 30
   # The number of concurrent threads supporting HTTP requests.
   rest_threads: 5
   # Sets the number of threads supporting queries (the default is 3).
   operator_pool: 3
   write_immediate: true
   threshold_time : 60 seconds
   threshold_volume: 10KB

