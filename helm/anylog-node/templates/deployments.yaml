apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '{{ .Values.general.namespace }}'
  name: '{{ .Values.general.deployment_name }}'
  labels:
    app: '{{ .Values.general.deployment_name }}'
spec:
  replicas: {{ .Values.general.replicas }}
  selector:
    matchLabels:
      app: '{{ .Values.general.deployment_name }}'
  template:
    metadata:
      labels:
        app: '{{ .Values.general.deployment_name }}'
    spec:
      hostname: {{ .Values.general.pod_name }}
      {{- if ne .Values.general.nodeSelector "" }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.general.nodeSelector }}
      {{ end }}

      {{- if ne .Values.image.secretName "" }}
      imagePullSecrets:
        - name: {{ .Values.image.secretName }}
      {{ end }}
      containers:
      - name: '{{ .Values.general.deployment_name }}'
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: '{{ .Values.general.configmap_name }}'
        tty: true
        stdin: true
        ports:
        - name: server
          containerPort: {{ .Values.configs.networking.server }}
        - name: rest
          containerPort: {{ .Values.configs.networking.rest }}
        {{- if .Values.configs.networking.broker }}
        - name: broker
          containerPort: {{ .Values.configs.networking.broker }}
        {{ end }}
        {{- if eq .Values.volume.enable_volume true }}
        volumeMounts:
          - name: '{{ .Values.volume.anylog_volume_name }}'
            mountPath: /app/AnyLog-Network/anylog
          - name: '{{ .Values.volume.blockchain_volume_name }}'
            mountPath: /app/AnyLog-Network/blockchain
          - name: '{{ .Values.volume.data_volume_name }}'
            mountPath: /app/AnyLog-Network/data
          {{- if .Values.volume.remote_cli }}
          - name: '{{ .Values.volume.remote_cli }}'
            mountPath: /app/Remote-CLI/anylog_query/static/blobs/current/
          {{ end }}
        {{ end }}
      {{- if eq .Values.volume.enable_volume true }}
      volumes:
        - name: '{{ .Values.volume.anylog_volume_name }}'
          persistentVolumeClaim:
            claimName: '{{ .Values.volume.anylog_volume_name }}-pvc'
        - name: '{{ .Values.volume.blockchain_volume_name }}'
          persistentVolumeClaim:
            claimName: '{{ .Values.volume.blockchain_volume_name }}-pvc'
        - name: '{{ .Values.volume.data_volume_name }}'
          persistentVolumeClaim:
            claimName: '{{ .Values.volume.data_volume_name }}-pvc'
#        {{- if .Values.volume.remote_cli }}
#        - name: '{{ .Values.volume.remote_cli }}'
#          persistentVolumeClaim:
#            claimName: '{{ .Values.volume.remote_cli }}-pvc'
#        {{ end }}
      {{ end }}
