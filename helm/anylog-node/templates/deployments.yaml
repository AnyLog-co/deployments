apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '{{ .Values.metadata.namespace }}'
  name: '{{ .Values.metadata.deployment_name }}'
  labels:
    app: '{{ .Values.metadata.deployment_name }}'
spec:
  replicas: {{ .Values.metadata.replicas }}
  selector:
    matchLabels:
      app: '{{ .Values.metadata.deployment_name }}'
  template:
    metadata:
      labels:
        app: '{{ .Values.metadata.deployment_name }}'
    spec:
      hostname: {{ .Values.metadata.pod_name }}
      {{- if .Values.metadata.nodeSelector }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.metadata.nodeSelector }}
      {{ end }}
      {{- if ne .Values.image.secretName "" }}
      imagePullSecrets:
        - name: {{ .Values.image.secretName }}
      {{ end }}
      containers:
      - name: '{{ .Values.metadata.deployment_name }}'
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: '{{ .Values.metadata.configmap_name }}'
        tty: true
        stdin: true
        ports:
        - name: server
          containerPort: {{ .Values.networking.ANYLOG_SERVER_PORT }}
        - name: rest
          containerPort: {{ .Values.networking.ANYLOG_REST_PORT }}
        {{- if .Values.networking.ANYLOG_BROKER_PORT }}
        - name: broker
          containerPort: {{ .Values.networking.ANYLOG_BROKER_PORT }}
        {{ end }}
        {{- if eq .Values.volume.enable_volume true }}
        volumeMounts:
          - name: '{{ .Values.volume.anylog_volume.name }}'
            mountPath: {{ .Values.volume.anylog_volume.path }}
          - name: '{{ .Values.volume.blockchain_volume.name }}'
            mountPath: {{ .Values.volume.blockchain_volume.path }}
          - name: '{{ .Values.volume.data_volume.name }}'
            mountPath: {{ .Values.volume.data_volume.path }}
        {{ end }}
      {{- if eq .Values.volume.enable_volume true }}
      volumes:
        - name: '{{ .Values.volume.anylog_volume.name }}'
          persistentVolumeClaim:
            claimName: '{{ .Values.volume.anylog_volume.name }}-pvc'
        - name: '{{ .Values.volume.blockchain_volume.name }}'
          persistentVolumeClaim:
            claimName: '{{ .Values.volume.blockchain_volume.name }}-pvc'
        - name: '{{ .Values.volume.data_volume.name }}'
          persistentVolumeClaim:
            claimName: '{{ .Values.volume.data_volume.name }}-pvc'
      {{ end }}
