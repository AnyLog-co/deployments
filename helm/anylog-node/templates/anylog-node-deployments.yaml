apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '{{ .Values.metadata.namespace }}'
  name: '{{ .Values.metadata.deployment_name }}'
  labels:
    app: '{{ .Values.metadata.app_name }}'
spec:
  replicas: {{ .Values.metadata.replicas }}
  selector:
    matchLabels:
      app: '{{ .Values.metadata.app_name }}'
  template:
    metadata:
      labels:
        app: '{{ .Values.metadata.app_name }}'
    spec:
      hostname: {{ .Values.metadata.pod_name }}
      {{- if ne .Values.metadata.node_selector "" }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.metadata.node_selector }}
      {{ end }}
      {{- if ne .Values.image.secret_name "" }}
      imagePullSecrets:
        - name: {{ .Values.image.secret_name }}
      {{ end }}
      containers:
      - name: '{{ .Values.metadata.deployment_name }}'
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
        imagePullPolicy: '{{ .Values.image.pull_policy }}'
#        command: [ "/bin/sh", "-c" ]
#        args:
#          - "cp -R /app/initial_data/. /app/AnyLog-Network"
        volumeMounts:
        - name: anylog-node-data
          mountPath: /app/AnyLog-Network/data
        - name: anylog-node-anylog
          mountPath: /app/AnyLog-Network/anylog
        - name: anylog-node-blockchain
          mountPath: /app/AnyLog-Network/blockchain
        - name: anylog-node-local-scripts
          mountPath: /app/AnyLog-Network/scripts
        envFrom:
        - configMapRef:
            name: '{{ .Values.metadata.configmap_name }}'
        tty: true
        stdin: true
        ports:
        - name: server
          containerPort: {{ .Values.networking.ANYLOG_SERVER_PORT }}
        - name: rest
          containerPort: {{ .Values.networking.ANYLOG_REST_PORT }}
        {{- if .Values.networking.ANYLOG_BROKER_PORT }}
        - name: broker
          containerPort: {{ .Values.networking.ANYLOG_BROKER_PORT }}
        {{ end }}
      volumes:
      - name: anylog-node-data
        persistentVolumeClaim:
          claimName: data-pvc
      - name: anylog-node-anylog
        persistentVolumeClaim:
          claimName: anylog-pvc
      - name: anylog-node-blockchain
        persistentVolumeClaim:
          claimName: blockchain-pvc
      - name: anylog-node-local-scripts
        persistentVolumeClaim:
          claimName: local-scripts-pvc


