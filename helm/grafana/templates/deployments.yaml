apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '{{ .Values.general.namespace }}'
  name: '{{ .Values.general.deployment_name }}'
  labels:
    app: '{{ .Values.general.app_name }}'
spec:
  replicas: {{ .Values.general.replicas }}
  selector:
    matchLabels:
      app: '{{ .Values.general.app_name }}'
  template:
    metadata:
      name: '{{ .Values.general.deployment_name }}'
      labels:
        app: {{ .Values.general.app_name }}
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: '{{ .Values.general.deployment_name }}'
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: '{{ .Values.general.configmap_name }}'
          ports:
            - name: '{{ .Values.networking.port_name }}'
              containerPort: 3000
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          {{- if eq .Values.volume.enable_volume true }}
          volumeMounts:
            - name: '{{ .Values.volume.data_volume_name }}' # grafana data volume
              mountPath: /var/lib/grafana
            {{ end }}
      {{- if eq .Values.volume.enable_volume true }}
      volumes:
        - name: '{{ .Values.volume.data_volume_name }}' # grafana data volume
          persistentVolumeClaim:
            claimName: '{{ .Values.volume.data_volume_name }}-pvc'
      {{ end }}