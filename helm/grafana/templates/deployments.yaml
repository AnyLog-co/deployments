#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  namespace: '{{ .Values.general.namespace }}'
#  name: '{{ .Values.general.deployment_name }}'
#  labels:
#    app: '{{ .Values.general.app_name }}'
#spec:
#  replicas: {{ .Values.general.replicas }}
#  selector:
#    matchLabels:
#      app: '{{ .Values.general.app_name }}'
#  template:
#    metadata:
#      name: '{{ .Values.general.deployment_name }}'
#      labels:
#        app: {{ .Values.general.app_name }}
#    spec:
#      containers:
#      - name: '{{ .Values.general.deployment_name }}'
#        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
#        envFrom:
#          - configMapRef:
#              name: '{{ .Values.general.configmap_name }}'
#        ports:
#        - name: '{{ .Values.networking.port_name }}'
#          containerPort: 3000
#        volumeMounts:
#          - name: grafana-data-volume
#            mountPath: /var/lib/grafana
#      volumes:
#        - name: grafana-data-volume
#          hostPath:
#            path: /var/lib/grafana


apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-ewan
#  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      securityContext:
            runAsUser: 472
            runAsGroup: 472
            fsGroup: 472
      containers:
      - name: grafana
        # command: ['sh', '-c', 'chown -R 472:472 /var/lib/grafana']
        image: grafana/grafana:5.4.2
        ports:
        - name: grafana
          containerPort: 3000
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-storage
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-datasources
            readOnly: false
      volumes:
        - name: grafana-storage
          hostPath:
                  path: /home/anylog
                  type: Directory
          #persistentVolumeClaim:
          #        claimName: allow
        - name: grafana-datasources
          configMap:
              defaultMode: 420
              name: grafana-datasources
#      nodeSelector:
#               node: host1




