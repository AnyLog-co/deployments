apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  namespace: {{ .Values.general.namespace }}
  name: {{ .Values.general.deployment_name }}
  labels:
    app: {{ .Values.general.app_name }}
spec:
  replicas: {{ .Values.general.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.general.app_name }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.general.app_name }}
    spec:
      {{- if ne .Values.general.nodeSelector "" }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.general.nodeSelector }}
      {{ end }}
      containers:
      - name: {{ .Values.general.deployment_name }}
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["--dbpath", "{{ .Values.volume.path }}"]
        livenessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.general.credentials_name }}
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.general.credentials_name }}
              key: password
        {{- if eq .Values.volume.enable_volume true }}
        volumeMounts:
        - name: {{ .Values.volume.name }}
          mountPath: {{ .Values.volume.path }}
        {{ end }}
      {{- if eq .Values.volume.enable_volume true }}
      volumes:
      - name: {{ .Values.volume.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.volume.name }}-pvc
      {{ end }}

