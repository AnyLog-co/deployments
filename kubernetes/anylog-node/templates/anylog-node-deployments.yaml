apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: '{{ .Values.metadata.namespace }}'
  name: '{{ .Values.metadata.deployment_name }}'
  labels:
    app: '{{ .Values.metadata.app_name }}'
spec:
  replicas: {{ .Values.metadata.replicas }}
  selector:
    matchLabels:
      app: '{{ .Values.metadata.app_name }}'
  template:
    metadata:
      labels:
        app: '{{ .Values.metadata.app_name }}'
    spec:
      hostname: '{{ .Values.metadata.pod_name }}'
      {{- if ne .Values.metadata.node_selector "" }}
      nodeSelector:
        kubernetes.io/hostname: '{{ .Values.metadata.node_selector }}'
      {{ end }}
      {{- if ne .Values.image.secret_name "" }}
      imagePullSecrets:
        - name: '{{ .Values.image.secret_name }}'
      {{ end }}
      containers:
      - name: '{{ .Values.metadata.deployment_name }}'
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
        imagePullPolicy: '{{ .Values.image.pull_policy }}'
#        volumeMounts:
#        - name: '{{ .Values.metadata.deployment_name }}-data'
#          mountPath: /app/AnyLog-Network/data
#        - name: '{{ .Values.metadata.deployment_name }}-anylog'
#          mountPath: /app/AnyLog-Network/anylog
#        - name: '{{ .Values.metadata.deployment_name }}-blockchain'
#          mountPath: /app/AnyLog-Network/blockchain
#        - name: '{{ .Values.metadata.deployment_name }}-local-scripts'
#          mountPath: /app/deployment-scripts
       envFrom:
        - configMapRef:
            name: '{{ .Values.metadata.configmap_name }}'
        tty: true
        stdin: true
        ports:
        - name: server
          containerPort: {{ .Values.node_configs.networking.ANYLOG_SERVER_PORT }}
        - name: rest
          containerPort: {{ .Values.node_configs.networking.ANYLOG_REST_PORT }}
        {{- if .Values.node_configs.networking.ANYLOG_BROKER_PORT }}
        - name: broker
          containerPort: {{ .Values.node_configs.networking.ANYLOG_BROKER_PORT }}
        {{ end }}
#      volumes:
#      - name: '{{ .Values.metadata.deployment_name }}-data'
#        persistentVolumeClaim:
#          claimName: '{{ .Values.metadata.deployment_name }}-data-pvc'
#      - name: '{{ .Values.metadata.deployment_name }}-anylog'
#        persistentVolumeClaim:
#          claimName: '{{ .Values.metadata.deployment_name }}-anylog-pvc'
#      - name: '{{ .Values.metadata.deployment_name }}-blockchain'
#        persistentVolumeClaim:
#          claimName: '{{ .Values.metadata.deployment_name }}-blockchain-pvc'
#      - name: {{ .Values.metadata.deployment_name }}-local-scripts
#        persistentVolumeClaim:
#          claimName: '{{ .Values.metadata.deployment_name }}-local-scrpts-pvc'
