# --- General ---
# License Key for activating AnyLog
#LICENSE_KEY=<GENERAL_LICENSE_KEY>
# Information regarding which AnyLog node configurations to enable. By default, even if everything is disabled, AnyLog starts TCP and REST connection protocols
NODE_TYPE=rest
# Name of the AnyLog instance
NODE_NAME=anylog-node
# Owner of the AnyLog instance
COMPANY_NAME=New Company

# --- Networking ---
# By default, a node will connect to the (TCP, REST and Message Broker - if declared) based on its associated policy.
#
# If a user disables policy-based option (`POLICY_BASED_NETWORKING=false`) then network connectivity is based on information
# in the configuration file.
#
# For policy-based configuration networking will be set as follows:
#   1. A user is able to decide whether the TCP connectivity is set to bind or not. If bind is enabled - then AnyLog
#       will use either the local or overlay IP address.
#        * If an overlay is declared, then the overlay IP address will replace the local IP address
#        * If binding is enabled, then AnyLog will only utilize the local or overlay IP address. Whereas if
#          binding is disabled, the blockchain will use both the external and local (or overlay) IP addresses of the
#          physical machine.
#
#    2. For REST and Message Broker, the (default) binding value is False. This is because data and/or GET requests
#       coming-in may come from machines/devices outside the network.#
#
#    3. Regarding the relation between blockchain policy and AnyLog networking - AnyLog only cares about policy keys `ip`,
#       `local_ip` and port values. All other networking information, such as `proxy_ip` and `external_ip` (if binding is
#       True), are more of an FYI regarding the network configurations of the actual machine.

# Port address used by AnyLog's TCP protocol to communicate with other nodes in the network
ANYLOG_SERVER_PORT=32548
# Port address used by AnyLog's REST protocol
ANYLOG_REST_PORT=32549
# Port value to be used as an MQTT broker, or some other third-party broker
#ANYLOG_BROKER_PORT=<NETWORKING_ANYLOG_BROKER_PORT>

# --- Database ---
# Physical database type
DB_TYPE=sqlite
# Username for SQL database connection
#DB_USER=<DATABASE_DB_USER>
# Password correlated to database user
#DB_PASSWD=<DATABASE_DB_PASSWD>
# Database IP address
#DB_IP=<DATABASE_DB_IP>
# Database port number
#DB_PORT=<DATABASE_DB_PORT>
# Whether to start to start system_query logical database
SYSTEM_QUERY=false
# Run system_query using in-memory SQLite. If set to false, will use pre-set database type
MEMORY=true
# Whether to enable NoSQL logical database
NOSQL_ENABLE=false
# Physical NoSQL database type
NOSQL_TYPE=mongo
# Username for NoSQL database connection
#NOSQL_USER=<DATABASE_NOSQL_USER>
# Password correlated to NoSQL database user
#NOSQL_PASSWD=<DATABASE_NOSQL_PASSWD>
# NoSQL database IP address
NOSQL_IP=127.0.0.1
# Database port number
NOSQL_PORT=27017
# Store blobs in database
NOSQL_BLOBS_DBMS=true
# Store blobs in folder
NOSQL_BLOBS_FOLDER=true
# Compress stored blobs
NOSQL_BLOBS_COMPRESS=false
# Whether (re)store a blob if already exists
NOSQL_BLOBS_REUSE=true

# --- Blockchain ---
# TCP connection information for Master Node
LEDGER_CONN=127.0.0.1:32548
# How often to sync from blockchain
SYNC_TIME=30 second

# --- Operator ---
# Owner of the cluster
CLUSTER_NAME=new-company-cluster
# Logical database name
DEFAULT_DBMS=test
# Whether to enable partitioning
ENABLE_PARTITIONS=true
# Which timestamp column to partition by
PARTITION_COLUMN=insert_timestamp
# How many partitions to keep
PARTITION_KEEP=3

# --- MQTT ---
# Whether to enable the default MQTT process
ENABLE_MQTT=false
# Whether to enable MQTT logging process
MQTT_LOG=false
# IP address of MQTT broker
MQTT_BROKER=driver.cloudmqtt.com
# Port associated with MQTT broker
MQTT_PORT=18785
# User associated with MQTT broker
MQTT_USER=ibglowct
# Password associated with MQTT user
MQTT_PASSWD=MSY4e009J7ts
# Topic to get data for
MQTT_TOPIC=anylogedgex-demo
# Logical database name
MQTT_DBMS=test
# Table where to store data
MQTT_TABLE=bring [sourceName]
# Timestamp column name
MQTT_TIMESTAMP_COLUMN=now
# Value column name
MQTT_VALUE_COLUMN=bring [readings][][value]
# Column value type
MQTT_VALUE_COLUMN_TYPE=int

# --- Advanced Settings ---
# Whether to monitor the node or not
MONITOR_NODES=false
# Which node type to send monitoring information to
MONITOR_NODE=query
# Company node is associated with the monitor node
MONITOR_NODE_COMPANY=New Company

