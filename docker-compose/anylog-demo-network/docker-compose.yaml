version: "2.2"
services:
  postgres:
      image: postgres:14.0-alpine
      env_file:
        - envs/postgres.env
      container_name: postgres
      restart: always
      stdin_open: true
      tty: true
      ports:
        - "5432:5432"
      volumes:
        - pgdata:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 5s
        timeout: 5s
        retries: 5
  anylog-master-node:
    depends_on:
      postgres:
        condition: service_healthy
    image: anylogco/anylog-network:${TAG}
    env_file:
      - envs/anylog_master.env
    container_name: anylog-master-node
    restart: always
    stdin_open: true
    tty: true
    network_mode: "host"
    volumes:
      - anylog-master-node-anylog:/app/AnyLog-Network/anylog
      - anylog-master-node-blockchain:/app/AnyLog-Network/blockchain
      - anylog-master-node-data:/app/AnyLog-Network/data
      - anylog-master-node-local-scripts:/app/AnyLog-Network/scripts
  anylog-query-node:
    depends_on:
      postgres:
        condition: service_healthy
    image: anylogco/anylog-network:${TAG}
    env_file:
      - envs/anylog_query.env
    container_name: anylog-query-node
    restart: always
    stdin_open: true
    tty: true
    network_mode: "host"
    volumes:
      - remote-cli-current:/app/Remote-CLI/anylog_query/static/blobs/current/
      - anylog-query-node-anylog:/app/AnyLog-Network/anylog
      - anylog-query-node-blockchain:/app/AnyLog-Network/blockchain
      - anylog-query-node-data:/app/AnyLog-Network/data
      - anylog-query-node-local-scripts:/app/AnyLog-Network/scripts
  anylog-operator-node1:
    depends_on:
      postgres:
        condition: service_healthy
    image: anylogco/anylog-network:${TAG}
    env_file:
      - envs/anylog_operator1.env
    container_name: anylog-operator-node1
    restart: always
    stdin_open: true
    tty: true
    network_mode: "host"
    volumes:
      - anylog-operator-node1-anylog:/app/AnyLog-Network/anylog
      - anylog-operator-node1-blockchain:/app/AnyLog-Network/blockchain
      - anylog-operator-node1-data:/app/AnyLog-Network/data
      - anylog-operator-node1-local-scripts:/app/AnyLog-Network/scripts
  anylog-operator-node2:
    depends_on:
      postgres:
        condition: service_healthy
    image: anylogco/anylog-network:${TAG}
    env_file:
      - envs/anylog_operator2.env
    container_name: anylog-operator-node2
    restart: always
    stdin_open: true
    tty: true
    network_mode: "host"
    volumes:
      - anylog-operator-node2-anylog:/app/AnyLog-Network/anylog
      - anylog-operator-node2-blockchain:/app/AnyLog-Network/blockchain
      - anylog-operator-node2-data:/app/AnyLog-Network/data
      - anylog-operator-node2-local-scripts:/app/AnyLog-Network/scripts
  remote-cli:
    image: anylogco/remote-cli:latest
    container_name: remote-cli
    restart: always
    stdin_open: true
    tty: true
    network_mode: "host" 
    #ports:
    #  - "${CLI_PORT}:${CLI_PORT}"
    environment:
      - CONN_IP=${CONN_IP}
      - CLI_PORT=${CLI_PORT}
    volumes:
      - remote-cli:/app/Remote-CLI/anylog_query/static/json
      - remote-cli-current:/app/Remote-CLI/anylog_query/static/blobs/current/
  grafana:
    image: grafana/grafana:7.5.7
    env_file:
      - envs/grafana.env
    container_name: grafana
    restart: always
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-log:/var/log/grafana
      - grafana-config:/etc/grafana
volumes:
  pgdata:
  remote-cli:
  remote-cli-current:
  grafana-data:
  grafana-log:
  grafana-config:
  anylog-master-node-anylog:
  anylog-master-node-blockchain:
  anylog-master-node-data:
  anylog-master-node-local-scripts:
  anylog-query-node-anylog:
  anylog-query-node-blockchain:
  anylog-query-node-data:
  anylog-query-node-local-scripts:
  anylog-operator-node1-anylog:
  anylog-operator-node1-blockchain:
  anylog-operator-node1-data:
  anylog-operator-node1-local-scripts:
  anylog-operator-node2-anylog:
  anylog-operator-node2-blockchain:
  anylog-operator-node2-data:
  anylog-operator-node2-local-scripts:
