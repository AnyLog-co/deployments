# --- General ---
# Information regarding which AnyLog node configurations to enable. By default, even if everything is disabled, AnyLog starts TCP and REST connection protocols [Default: operator]
NODE_TYPE=operator
# Name of the AnyLog instance [Default: anylog-operator]
NODE_NAME=anylog-operator
# Owner of the AnyLog instance [Default: New Company]
COMPANY_NAME=New Company
# Coordinates of the machine - used by Grafana to map the network [Default: 0.0, 0.0]
#LOCATION=<GENERAL_LOCATION>
# Country where machine is located [Default: Unknown]
#COUNTRY=<GENERAL_COUNTRY>
# State where machine is located [Default: Unknown]
#STATE=<GENERAL_STATE>
# City where machine is located [Default: Unknown]
#CITY=<GENERAL_CITY>

# --- Authentication ---
# When using AnyLog authentication, nodes should have authentcation enabled once declared as a member on the blockchain [Default: false]
ENABLE_AUTH=false
# Whether or not to enable authentication when accessing node via REST [Default: false]
ENABLE_REST_AUTH=false
# Provide a password to protect sensitive information that is kept on the node
#NODE_PASSWORD=<AUTHENTICATION_NODE_PASSWORD>
# user that can connect to this node [Default: user1]
USER_NAME=user1
# Password associated with the user
#USER_PASSWORD=<AUTHENTICATION_USER_PASSWORD>
# The type of user [Default: admin]
USER_TYPE=admin
# Password used by the ROOT member in authentication
#ROOT_PASSWORD=<AUTHENTICATION_ROOT_PASSWORD>

# --- Networking ---
## By default, a node will connect to the (TCP, REST and Message Broker - if declared) based on its associated policy.
#
# If a user disables policy-based option (`POLICY_BASED_NETWORKING=false`) then network connectivity is based on information
# in the configuration file.
#
# For policy-based configuration networking will be set as follows:
#   1. A user is able to decide whether the TCP connectivity is set to bind or not. If bind is enabled - then AnyLog
#       will use either the local or overlay IP address.
#        * If an overlay is declared, then the overlay IP address will replace the local IP address
#        * If binding is enabled, then AnyLog will only utilize the local or overlay IP address. Whereas if
#          binding is disabled, the blockchain will use both the external and local (or overlay) IP addresses of the
#          physical machine.
#
#    2. For REST and Message Broker, the (default) binding value is False. This is because data and/or GET requests
#       coming-in may come from machines/devices outside the network.#
#
#    3. Regarding the relation between blockchain policy and AnyLog networking - AnyLog only cares about policy keys `ip`,
#       `local_ip` and port values. All other networking information, such as `proxy_ip` and `external_ip` (if binding is
#       True), are more of an FYI regarding the network configurations of the actual machine.#
# Connect to TCP, REST and Message Broker (if configured) based on correlating node policy [Default: true]
POLICY_BASED_NETWORKING=true
# External IP address of the machine
#EXTERNAL_IP=<NETWORKING_EXTERNAL_IP>
# Internal network IP address of the machine
#LOCAL_IP=<NETWORKING_LOCAL_IP>
# Overlay IP address - if set, will replace local IP address when connecting to network
#OVERLAY_IP=<NETWORKING_OVERLAY_IP>
# Configurable (local) IP address that can be used when behind a proxy, or using Kubernetes for static IP
#PROXY_IP=<NETWORKING_PROXY_IP>
# Port address used by AnyLog's TCP protocol to communicate with other nodes in the network [Default: 32148]
ANYLOG_SERVER_PORT=32148
# Port address used by AnyLog's REST protocol [Default: 32149]
ANYLOG_REST_PORT=32149
# Port value to be used as an MQTT broker, or some other third-party broker
#ANYLOG_BROKER_PORT=<NETWORKING_ANYLOG_BROKER_PORT>
# A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs) [Default: true]
TCP_BIND=true
# The number of concurrent threads supporting HTTP requests.	 [Default: 6]
TCP_THREADS=6
# A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs) [Default: false]
REST_BIND=false
# Timeout in seconds to determine a time interval such that if no response is being returned during the time interval, the system returns timeout error. [Default: 20]
REST_TIMEOUT=20
# The number of concurrent threads supporting HTTP requests.	 [Default: 6]
REST_THREADS=6
# Boolean value to determine if messages are send over HTTPS with client certificates. [Default: False]
REST_SSL=False
# A bool value that determines if to bind to a specific IP and Port (a false value binds to all IPs) [Default: false]
BROKER_BIND=false
# The number of concurrent threads supporting HTTP requests.	 [Default: 6]
BROKER_THREADS=6

# --- Database ---
# Physical database type [Default: sqlite]
DB_TYPE=sqlite
# Username for SQL database connection
#DB_USER=<DATABASE_DB_USER>
# Password correlated to database user
#DB_PASSWD=<DATABASE_DB_PASSWD>
# Database IP address [Default: 127.0.0.1]
DB_IP=127.0.0.1
# Database port number [Default: 5432]
DB_PORT=5432
# Whether to set autocommit data [Default: false]
AUTOCOMMIT=false
# Whether to start to start system_query logical database [Default: false]
SYSTEM_QUERY=false
# Run system_query using in-memory SQLite. If set to false, will use pre-set database type [Default: true]
MEMORY=False
# Whether to enable NoSQL logical database [Default: false]
NOSQL_ENABLE=false
# Physical database type [Default: mongo]
NOSQL_TYPE=mongo
# Username for SQL database connection
#NOSQL_USER=<DATABASE_NOSQL_USER>
# Password correlated to database user
#NOSQL_PASSWD=<DATABASE_NOSQL_PASSWD>
# Database IP address [Default: 127.0.0.1]
NOSQL_IP=127.0.0.1
# Database port number [Default: 27017]
NOSQL_PORT=27017
# Store blobs in database [Default: true]
NOSQL_BLOBS_DBMS=true
# Store blobs in folder [Default: true]
NOSQL_BLOBS_FOLDER=true
# Compress stored blobs [Default: false]
NOSQL_BLOBS_COMPRESS=false
# Whether (re)store a blob if already exists [Default: true]
NOSQL_BLOBS_REUSE=true

# --- Blockchain ---
# TCP connection information for Master Node [Default: 127.0.0.1:32048]
LEDGER_CONN=127.0.0.1:32048
# How often to sync from blockchain [Default: 30 second]
SYNC_TIME=30 second
# Source of where the data is coming from [Default: master]
BLOCKCHAIN_SOURCE=master
# Where will the copy of the blockchain be stored [Default: file]
BLOCKCHAIN_DESTINATION=file

# --- Operator ---
# Operator ID
#MEMBER=<OPERATOR_MEMBER>
# Owner of the cluster [Default: new-company-cluster]
CLUSTER_NAME=new-company-cluster
# Logical database name [Default: test]
DEFAULT_DBMS=test
# Whether of not to enable HA against the cluster [Default: false]
ENABLE_HA=false
# How many days back to sync between nodes [Default: 30]
START_DATE=30
# Whether to enable partitioning [Default: false]
ENABLE_PARTITIONS=false
# Which tables to partition [Default: *]
TABLE_NAME=*
# Which timestamp column to partition by [Default: insert_timestamp]
PARTITION_COLUMN=insert_timestamp
# Time period to partition by [Default: 14 days]
PARTITION_INTERVAL=14 days
# How many partitions to keep [Default: 6]
PARTITION_KEEP=6
# How often to check if an old partition should be removed [Default: 1 day]
PARTITION_SYNC=1 day
# Whether to create a new table in the operator [Default: true]
CREATE_TABLE=true
# Record data inserted on Operator [Default: true]
UPDAE_TSD_INFO=true
# Archive data coming in [Default: true]
ARCHIVE=true
# Compress JSON and SQL file(s) backup [Default: true]
COMPRESS_FILE=true
# How many threads to use in the operator process [Default: 1]
OPERATOR_THREADS=1

# --- Publisher ---
# Location of logical database name within file name [Default: 0]
DBMS_FILE_LOCATION=0
# Location of table name within file name [Default: 1]
TABLE_FILE_LOCATION=1
# Compress JSON and SQL file(s) backup [Default: true]
PUBLISHER_COMPRESS_FILE=true

# --- MQTT ---
# Whether to enable the default MQTT process [Default: false]
ENABLE_MQTT=false
# Whether to enable MQTT logging process [Default: false]
MQTT_LOG=false
# IP address of MQTT broker [Default: driver.cloudmqtt.com]
MQTT_BROKER=driver.cloudmqtt.com
# Port associated with MQTT broker [Default: 18785]
MQTT_PORT=18785
# User associated with MQTT broker [Default: ibglowct]
MQTT_USER=ibglowct
# Password associated with MQTT user [Default: MSY4e009J7ts]
MQTT_PASSWD=MSY4e009J7ts
# Topic to get data for [Default: anylogedgex]
MQTT_TOPIC=anylogedgex
# Logical database name [Default: test]
MQTT_DBMS=test
# Table where to store data [Default: rand_data]
MQTT_TABLE=rand_data
# Timestamp column name [Default: now]
MQTT_TIMESTAMP_COLUMN=now
# Value column name [Default: bring [readings][][value]]
MQTT_VALUE_COLUMN=bring [readings][][value]
# Column value type [Default: float]
MQTT_VALUE_COLUMN_TYPE=float

# --- Advanced Settings ---
# Whether to automatically run a local (or personalized) script at the end of the process [Default: false]
DEPLOY_LOCAL_SCRIPT=false
# Number of parallel queries [Default: 3]
QUERY_POOL=3
# When data comes in write to database immidiately, as opposed to waiting for a full buffer [Default: true]
WRITE_IMMEDIATE=true
# If buffer is not full, how long to wait until pushing data through [Default: 60 seconds]
THRESHOLD_TIME=60 seconds
# Buffer size to reach, at which point data is pushed through [Default: 10KB]
THRESHOLD_VOLUME=10KB

