# Deployment node type
NODE_TYPE=operator
# Unique name for the AnyLog node
NODE_NAME=anylog-operator-node
# Company owner of the node
COMPANY_NAME=New Company
# Physical location of the node
LOCATION=0.0, 0.0
# Country node is located in
COUNTRY=Unknown
# State node is located in
STATE=Unknown
# City node is located in
CITY=Unknown

# Port for TCP communication between nodes
ANYLOG_SERVER_PORT=32148
# Port for REST communication with the node
ANYLOG_REST_PORT=32149
# Message Broker Port for the node
#ANYLOG_BROKER_PORT=<ANYLOG_BROKER_PORT>
# External Network IP address
#EXTERNAL_IP=<EXTERNAL_IP>
# Local IP of the machine - if running on Kubernetes this value will be set as the Proxy IP
#LOCAL_IP=<LOCAL_IP>

# Blockchain ledger TCP connection information
LEDGER_CONN=127.0.0.1:32048
# How often to sync against the blockchain
SYNC_TIME=30 second
# Source of where the data is coming from
SOURCE=master
# Where will the copy of the blockchain be stored
DESTINATION=file

# Physical database type
DB_TYPE=sqlite
# Whether to automatically deploy system_query logical database on node - enabled by default on Query node
DEPLOY_SYSTEM_QUERY=true
# Run system_query logical database in memory
MEMORY=true

# Name of the cluster operator will be associated with
CLUSTER_NAME=new-cluster
# Logical database to store data coming into operator node
DATABASE_NAME=test
# whether or not to partition data on node
ENABLE_PARTITIONS=true
# table(s) to partition (default - all tables)
PARTITION_TABLE=*
# Timestamp column to partition by
PARTITION_COLUMN=timestamp
# Amount of time to partition by
PARTITION_INTERVAL=day
# Number of partitioned tables to keep
PARTITION_KEEP=7
# How often to check / remove old paritions
PARTITION_SYNC=1 day
# Operator member ID - by default it's autogenerated, should be set only when resetting blockchain, but want to keep exactly the same information
#MEMBER=<MEMBER>
# creates a table if the table doesn't exists
CREATE_TABLE=true
# update a summary table (tsd_info table in almgm dbms) with status of files ingested. (by default, almgm database & tsd_info table get created on all operator nodes)
UPDATE_TSD=true
# move JSON files to archives
ARCHIVE=true
# Transfer data files to members of the cluster
DISTRIBUTOR=true

# Whether or not to enable MQTT client process
ENABLE_MQTT=false
# MQTT broker address
BROKER=driver.cloudmqtt.com
# Port correlated to MQTT user
MQTT_PORT=18785
# Set MQTT user
MQTT_USER=ibglowct
# Password correlated to MQTT user
MQTT_PASSWORD=MSY4e009J7ts
# Whether or not to output the broekr log messages to screen
MQTT_LOG=false
# MQTT topic name
MQTT_TOPIC_NAME=anylogedgex
# Logical database to store data coming from MQTT client
MQTT_TOPIC_DBMS=test
# Physical table to store data in
MQTT_TABLE_NAME=rand_data
# timestamp column
MQTT_TOPIC_TIMESTAMP=now
# Data-type for non-timestamp column
MQTT_COLUMN_VALUE_TYPE=float
# How to extract value from data coming in
MQTT_COLUMN_VALUE=bring [readings][][value]

# Deploy user created script
DEPLOY_LOCAL_SCRIPT=false

# number of workers threads that process requests which are send to the provided IP and Port.
TCP_THREAD_POOL=6
# Amount of time (in seconds) until REST timeout
REST_TIMEOUT=30
# The number of concurrent threads supporting HTTP requests.
REST_THREADS=5
# Sets the number of threads supporting queries (the default is 3).
OPERATOR_THREADS=3
# Local database is immediate (independent of the calls to flush)
WRITE_IMMEDIATE=true
# The time threshold to flush the streaming data
THRESHOLD_TIME=60 seconds
# The accumulated data volume that calls the data flush process
THRESHOLD_SIZE=10KB

